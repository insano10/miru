{"name":"Miru","tagline":"Continuous monitoring for coding dojo sessions","body":"# miru\r\n\r\n\r\nMiru is a tool to monitor the progress of Java based coding dojo sessions.\r\n\r\n![](https://raw.githubusercontent.com/insano10/miru/master/docs/miru_dash.png)\r\n\r\nIt comprises of a set of scripts that continuously monitor the status of the project directory and a web front end to visualise progress\r\n\r\n\r\n# Usage\r\n\r\nmiru can be run either from the command line or from within IntelliJ IDEA\r\n\r\n## Command line - release tar\r\n\r\n1. Download Miru-1.0-SNAPSHOT-release.tar.gz\r\n1. Unpack the tar with 'tar zxvf Miru-1.0-SNAPSHOT-release.tar.gz'\r\n1. configure your project properties in properties/miru.properties\r\n1. ./miru-start-all.sh\r\n1. http://localhost:8080/miru\r\n\r\n## Command line - IntelliJ IDEA project\r\n\r\n1. Navigate to the root of the miru project directory\r\n1. configure your project properties in src/main/resources/miru.properties\r\n1. mvn clean install jetty:run\r\n1. ./scripts/gather/start-gather.sh src/main/resources/miru.properties\r\n1. http://localhost:8080/miru\r\n\r\n\r\n## From IntelliJ IDEA\r\n\r\nCreate run configurations for the scripts and front end\r\n\r\n* Scripts\r\n  1. Create a new bash run configuration called 'start-gather'\r\n  1. Script = /home/jenny/code/miru/scripts/gather/start-gather.sh\r\n  1. Program Arguments = src/main/resources/miru.properties\r\n* Front end\r\n  1. Create a new maven run configuration called 'front-end'\r\n  1. Command line = clean install jetty:run -DmiruProperties=src/main/resources/miru.properties\r\n  1. configure your project properties in src/main/resources/miru.properties\r\n  1. Run 'start-gather' to start collecting data into the data/ directory\r\n  1. Run 'front-end' to start the web app on port 8080\r\n\r\n\r\n\r\n# Project Properties\r\n\r\n* projectName   - the name of your project. This can have any value\r\n* projectRoot   - the absolute path to the root of the project you want to monitor\r\n* sources       - the absolute path to the directory containing the Java sources of the project. This will typically be projectRoot/src/main/java\r\n* tests         - the absolute path to the directory containing the unit tests of the project. This will typically be projectRoot/src/test/java\r\n* classpath     - the absolute path to the directory containing all dependencies required by the project to run. This may be projectRoot/lib/*\r\n* vcs           - the version control system used by the project. miru currently supports svn, git and hg\r\n\r\n\r\n\r\n# Rebuilding the release tar\r\n\r\nThe project comes with a maven assembly configuration in src/assembly/assembly.xml which can be used to recreate the miru\r\ntar with maven target 'assembly:assembly'","google":"UA-66016638-6","note":"Don't delete this file! It's used internally to help with page regeneration."}